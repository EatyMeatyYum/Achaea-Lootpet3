{"type":"group","name":"lootpet","enabled":true,"items":[{"type":"function","name":"Read_Me","enabled":true,"code":"/* \n\nLootpet v1.0.3\nby: Zahan of Achaea\n\n\nYour very own lootpet!  This \"pet\" will follow you around and pick up your loot!\nName it.  Describe it.  Show it off!\nIt tracks your gold and will even split what you've picked up with friends!\n\n\nUse LOOTPET in-game for options, settings, and syntaxes.\n\nExamples of the split command: \n    LOOTPET SPLIT ZAHAN\n    LOOTPET SPLIT ZAHAN THOTH PHAESTUS\n\n\nIf you have any problems or questions, send me a msg in the game or on the forum.\n\n\nThis plugin is provided for free but donations to Zahan (achaea) are always appreciated, no matter how small!\n\n\n<insert obligatory=\"use at your own risk\"/>\n\n\nVersion notes:\n- converted variable to object\n- fixed false settings defaulting to true\n- == to ===\n\n*/"},{"type":"alias","name":"","enabled":true,"actions":[{"type":"script","enabled":true,"script":"// for some reason, nexus doesn't run onLoad when you install.  so, load if needed\nif (typeof lootpet === \"undefined\")\n    send_command(\"lootpet reload\");\n\nvar version = \"1.0.3\"\n\nvar overall = 75;\n\nvar check_on = function (setting) {\n    var status;\n    if (!lootpet[setting])\n        status = \"off\";\n    else\n        status = \"on\";\n    return status;\n}\n\n\nlootpet.help = {\n    Main: {\n        \"ON|OFF\": \"= \"+check_on(\"on\")+\"; turn on/off\",\n        \"CONTAINER <item>\": \"= \"+lootpet.container+\"; set container\",\n        RELOAD: \"- reload package\",\n        DEFAULT: \"- restore default settings\",\n    },\n    \"Pet Info\": {\n        \"NAME <pet>\": \"= \"+lootpet.name+\"\",\n        \"DESCRIBE <desc>\": \"- set description\",\n        \"LOOK\": \"- look at your lootpet\",\n        \"SHOWOFF [channel]\": \"- share your pet's description\"\n    },\n    Options: {\n        \"SHOW_PET ON|OFF\": \"= \"+check_on(\"show_pet\")+\"; turn off to loot yourself\",\n        \"MY_KILL_ONLY ON|OFF\": \"= \"+check_on(\"my_kill_only\")+\"; loot only your kills\",\n        \"INP_GOLD ON|OFF\": \"= \"+check_on(\"inp_gold\")+\"; put acquired gold in container\",\n        //\"STAT_BAR ON|OFF\": \"= \"+check_on(\"stat_bar\")+\"; display tracking on stat bar\",\n        \"OUTPUT_MSG OFF|ON\": \"= \"+check_on(\"output_msg\")+\"; display settings messages\",\n    },\n    Tracking: {\n        \"TRACK ON|OFF\": \"= \"+check_on(\"on\")+\"; turn on/off the gold tracker\",\n        \"SHOW\": \"= \"+lootpet.tracked+\"; show tracked gold\",\n        \"SET <#>\": \"- set tracked gold\",\n        \"ADD <#>\": \"- add to tracked gold\",\n        \"SUB <#>\": \"- subtract from tracked gold\",\n        \"SPLIT <name(s)>\": \"- split tracked gold\",\n        \"CLEAR/RESET\": \"- reset tracked gold\",\n    }\n};\n\n\ndisplay_notice(\n    \"+-----------------------\", \"#aaa\", \"\",\n    \" Lootpet v\"+version+\" \", \"#808000\", \"\",\n    \" by Zahan \", \"#4B4B4B\", \"\",\n    \"------------------------+\", \"#aaa\", \"\"\n);\n\n\nfor (var header in lootpet.help) {\n    var spaces = overall - header.length - 4;\n    var space = \"\";\n    for (i=0; i<spaces; i++)\n        space = space+\"&nbsp;\";\n    display_notice(\"| \" + header + \":\"+space+\"|\");\n    for (var command in lootpet.help[header]) {\n        var spaces = 23 - command.length;\n        var space = \"\";\n        for (i=0; i<spaces; i++)\n            space = space+\"&nbsp;\";    \n        var line = \"   LOOTPET \"+command+space+lootpet.help[header][command];\n        var endsps = overall - (10+command.length+spaces+3+lootpet.help[header][command].length);\n        var endsp = \"\";\n        for (i=0; i<endsps; i++)\n            endsp = endsp+\"&nbsp;\";\n\n        // replace symbols and print\n        line = line.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n        display_notice(\"|\" + line + endsp + \"|\");\n    }\n    var spaces = overall - 2;\n    var space = \"\";\n    for (i=0; i<spaces; i++)\n        space = space+\"&nbsp;\";\n    if (header !== \"Tracking\")\n        display_notice(\"|\" + space + \"|\");\n}\n\ndisplay_notice(\"+-------------------------------------------------------------------------+\");"}],"text":"lootpet","matching":"exact","whole_words":false,"case_sensitive":false,"prefix_suffix":true},{"type":"group","name":"Functions","enabled":true,"actions":[],"items":[{"type":"function","name":"onLoad","enabled":true,"code":"// initiate table\nif (typeof lootpet === \"undefined\") {\n    lootpet = {\n        old: {},\n        aff: [],\n        grab: [],\n        gold: parseInt(0),\n    };\n}\n\n\nlootpet.stoppers = [\n    \"aeon\",\n    \"amnesia\",\n    \"bound\",\n    \"clumsiness\",\n    \"confusion\",\n    \"dizziness\",\n    \"disrupted\",\n    \"entangled\",\n    //\"frozen\",\n    \"hindered\",\n    \"impaled\",\n    \"paralysis\",\n    //\"prone\",\n    \"stupidity\",\n    \"transfixation\",\n    \"unconsciousness\",\n    \"webbed\",\n];\n\n\n// default settings - don't change these (change settings with LOOTPET alias in-game)\nlootpet.settings = {\n    name: \"a smart-looking pug\",\n    desc: \"This tiny pug, quite literally, looks really smart.  His fur is mostly off-white, but fades to black around his adorable pug nose.  Adorning his stout frame is a fitted black business suit complete with a stark white undershirt, and a black silken tie.  He has on his face a pair of round, black-rimmed spectacles, and around his neck is a thick silver chain.  Hanging from the chain is a talisman containing the letters 'LP'.\",\n    on: true,\n    show_pet: true,\n    my_kill_only: true,\n    inp_gold: true,\n    container: \"pack\",\n    output_msg: true,\n    stat_bar: true,\n    track: true,\n    tracked: parseInt(0),\n};\n\n\nlootpet.save_settings = function () {\n    var settings = {};\n    for (let key in lootpet.settings)\n        settings[key] = lootpet[key];\n    set_variable(\"lootpet\", settings);\n};\n\n\nlootpet.set_defaults = function () {\n    for (let key in lootpet.settings)\n        lootpet[key] = lootpet.settings[key];\n};\nlootpet.set_defaults();\n\n\n// load settings\nlootpet.saved = get_variable(\"lootpet\");\nif (lootpet.saved) {\n    if (typeof lootpet.saved === \"string\") {\n        // break apart variable if old string\n        var lootpet_set = lootpet.saved.split(\"|\");\n        for (i = 0; i < lootpet_set.length; i++) {\n            lootpet_set[i] = lootpet_set[i].split(\":\");\n            lootpet[lootpet_set[i][0]] = lootpet_set[i][1];\n        }\n        lootpet.save_settings();\n    }\n    else { \n        // set from variable\n        for (let key in lootpet.saved)\n            lootpet[key] = lootpet.saved[key];\n    }\n\n    // turn off gmcp, if off\n    if (!lootpet.on) {\n        var gmcp = reflex_find_by_name(\"function\", \"onGMCP\", true, false, \"Lootpet\");\n        reflex_disable(gmcp);\n    }\n}\n\n\nlootpet.msg = function (text) {\n    if (!lootpet.output_msg)\n        return;\n    display_notice(\"[Lootpet]: \"+text, \"seafoamgreen\");\n    //print(\" \");\n};\n\n\nlootpet.note = function () {\n    var args = arguments;\n    var divi = args.length / 3;\n    if (divi % 1 != 0) {\n        display_notice(\"Invalid cnote(\\\"\"+args[0]+\"\\\"...)\", \"red\");\n        display_notice(\"Paramaters must be in sets of 3!\", \"red\");\n        return;\n    }\n\n    var line = \"\";\n    for (var i=0; i<divi; i++) {\n        var txt = args[i*3];\n        var bg = args[i*3+2];\n        var fg = args[i*3+1];\n        //line = line+\"<span style='color:\"+fg+ \"; background:\"+bg+\"'>\" + txt + \"</span>\";\n        line = line + txt + \", \" + fg + \", \" + bg + \", \";\n        console.log(fg);\n        console.log(bg);\n        console.log(line);\n    }\n    display_notice(line);\n    send_command(\" \");\n};\n\n\n// pick up stuff\nlootpet.pickup = function() {\n    // run checks\n    if (!lootpet.grab || !lootpet.on || lootpet.looting) {\n        return;\n    }\n    if (!lootpet.bal || !lootpet.eq) {\n        return;\n    }\n    for (var i = 0; i < lootpet.stoppers.length; i++) {\n        if (lootpet.aff[lootpet.stoppers[i]]) {\n            return;\n        }\n    }\n\n    // send command\n    //for (let key in lootpet.grab) {\n  Object.keys(lootpet.grab).forEach(key => {\n        send_command(\"get \"+key + \"\\r\\n\");\n        last_send = new Date().getTime();\n        lootpet.getting = key;\n        lootpet.looting = lootpet.grab[key];\n        //break;\n    });\n\n    // turn off\n    if (!lootpet.looting && !lootpet.packing) {\n        var looting = reflex_find_by_name(\"group\", \"Looting\", true, false, \"Lootpet\");\n        reflex_disable(looting);\n    }\n};\n\n\n// put gold away\nlootpet.inp = function () {\n    // run checks\n    if (!lootpet.gold_out || !lootpet.inp_gold || lootpet.packing)\n        return;\n    if (!lootpet.bal || !lootpet.eq)\n        return;\n    for (var i = 0; i < lootpet.stoppers.length; i++) {\n        if (lootpet.aff[lootpet.stoppers[i]])\n            return;\n    }\n\n    // send command\n    send_command(\"put sovereigns in \"+lootpet.container + \"\\r\\n\");\n    last_send = new Date().getTime();\n    lootpet.packing = true;\n};\n\n//////////////////////\n\n// update_status_bar\n/*if (lootpet.old.update_status_bar)\n    update_status_bar = lootpet.old.update_status_bar;\nelse\n    lootpet.old.update_status_bar = update_status_bar;*/\n\n/*\nupdate_status_bar = (function() {\n    var cached_function = update_status_bar;\n    return function() {\n\n        var result = cached_function.apply(this, arguments);\n\n        if (!lootpet.stat_bar) {\n            // hide it because IRE re-shows it\n            $(\"#footer #status-tracked\").hide();\n            return;\n        }\n\n        var tracked = lootpet.tracked;\n        if (tracked > 0)\n            tracked = \"+\"+tracked;\n\n        // create div\n        if (!lootpet.inserted) {\n            $('#footer #status-target').after('<div id=\"status-tracked\" class=\"status-el\" rel=\"tooltip\" title=\"Tracked\" style=\"width: 100px; position: relative; left: 4px; text-align: right;\"></div>');\n            var div = $(\"#footer #status-tracked\");\n            if (lootpet.track)\n                div.css(\"color\", \"#3D670C\");\n            else\n                div.css(\"color\", \"#83210C\");\n            div.html(tracked);\n            lootpet.inserted = true;\n        }\n\n        // populate div\n        if (lootpet.diff == 0 && !lootpet.redraw)\n            return;\n        //$(\"#footer #status-tracked\").html(tracked);\n        delete lootpet.redraw;\n    };\n})();*/"},{"type":"function","name":"onGMCP","enabled":true,"code":"// Target slain\nif (args.gmcp_method === \"IRE.Misc.Achievement\") {\n    if (args.gmcp_args.name !== \"TotalCreaturesKilled\")\n        return;\n    lootpet.my_kill = true;\n}\n\n\n// Item dropped\nif (args.gmcp_method === \"Char.Items.Add\") {\n    if (args.gmcp_args.location !== \"room\")\n        return;\n    if (args.gmcp_args.item.attrib !== \"t\")\n        return;\n    if (!lootpet.on)\n        return;\n    if (lootpet.my_kill_only && !lootpet.my_kill)\n        return;\n\n    var id = args.gmcp_args.item.id;\n    var name = args.gmcp_args.item.name;\n    if (!lootpet.grab)\n        lootpet.grab = {};\n    lootpet.grab[id] = name;\n\n    var looting = reflex_find_by_name(\"group\", \"Looting\", true, false, \"Lootpet\");\n    reflex_enable(looting);\n}\n\n\n// Gold acquired\nif (args.gmcp_method === \"Char.Status\") {\n    if (!args.gmcp_args.gold)\n        return;\n    \n    var gold = Number(args.gmcp_args.gold);\n    if (gold == 0)\n        return;\n    \n    if (lootpet.gold == 0) {\n        lootpet.gold = gold;\n        return;\n    }\n    \n    lootpet.diff = gold - lootpet.gold;\n    if (lootpet.diff == 0)\n        return;\n    \n    lootpet.gold = gold;\n    if (lootpet.track) {\n        lootpet.tracked = Number(lootpet.tracked);\n        lootpet.tracked += lootpet.diff;\n    }\n    \n    if (lootpet.diff > 0) {\n        lootpet.gold_out = true;\n        if (lootpet.splitting)\n            return;\n        var looting = reflex_find_by_name(\"group\", \"Looting\", true, false, \"Lootpet\");\n        reflex_enable(looting);\n    }\n}\n\n\n// Vitals\nif (args.gmcp_method === \"Char.Vitals\") {\n    if (lootpet.my_kill)\n        delete lootpet.my_kill;\n\n    if (args.gmcp_args.bal === \"1\")\n        lootpet.bal = 1;\n    else\n        delete lootpet.bal;\n\n    if (args.gmcp_args.eq === \"1\")\n        lootpet.eq = 1;\n    else\n        delete lootpet.eq;\n\n    if (Object.keys(lootpet.grab).length > 0)\n        lootpet.pickup();\n    if (lootpet.gold_out && !lootpet.splitting)\n        lootpet.inp();\n}\n\n\n// Item picked up\nif (args.gmcp_method === \"Char.Items.Remove\") {\n    if (args.gmcp_args.location !== \"room\")\n        return;\n    var id = args.gmcp_args.item.id;\n    if (lootpet.grab[id])\n        delete lootpet.grab[id];\n}\n\n\n// Afflictions\nif (args.gmcp_method === \"Char.Afflictions.Add\") {\n    var aff = args.gmcp_args.name;\n    lootpet.aff[aff] = 1;\n}\n\nif (args.gmcp_method === \"Char.Afflictions.Remove\") {\n    var aff = String(args.gmcp_args);\n    delete lootpet.aff[aff];\n}"},{"type":"alias","name":"","enabled":true,"actions":[{"type":"script","enabled":true,"script":"//Enter the script here\n Object.keys(lootpet.grab).forEach(key => {\n      //display_notice(\"Picking up \" + key);\n        send_command(\"get \"+key + \"\\r\\n\");\n        last_send = new Date().getTime();\n        lootpet.getting = key;\n        lootpet.looting = lootpet.grab[key];\n        //break;\n    });"}],"text":"lootpettest","matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true}]},{"type":"group","name":"Aliases","enabled":true,"actions":[],"items":[{"type":"alias","name":"lootpet on|off","enabled":true,"actions":[{"type":"script","enabled":true,"script":"var suffix = args[1];\nvar gmcp = reflex_find_by_name(\"function\", \"onGMCP\", true, false, \"Lootpet\");\nif (suffix === \"on\") {\n    lootpet.on = true;\n    reflex_enable(gmcp);\n}\nelse {\n    lootpet.on = false;\n    reflex_disable(gmcp);\n}\nlootpet.msg(\"You turn \"+suffix+\" the lootpet.\");\nlootpet.save_settings();"}],"text":"^lootpet (on|off)$","matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true},{"type":"alias","name":"lootpet container <#>","enabled":true,"actions":[{"type":"script","enabled":true,"script":"lootpet.container = args[1];\nlootpet.msg(\"You set your loot container to \"+args[1]+\".\");\nlootpet.save_settings();"}],"text":"^lootpet container (.*?)$","matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true},{"type":"alias","name":"","enabled":true,"actions":[{"type":"function","enabled":true,"fn":"onLoad"}],"text":"lootpet reload","matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true},{"type":"alias","name":"","enabled":true,"actions":[{"type":"script","enabled":true,"script":"lootpet.set_defaults();\nlootpet.msg(\"You revert all settings to lootpet defaults.\");\nlootpet.save_settings();"}],"text":"lootpet default","matching":"exact","whole_words":false,"case_sensitive":false,"prefix_suffix":true},{"type":"alias","name":"lootpet name <pet>","enabled":true,"actions":[{"type":"script","enabled":true,"script":"lootpet.name = args[1];\nlootpet.msg(\"You change your companion to \\\"\"+args[1]+\"\\\".\");\nlootpet.save_settings();"}],"text":"^lootpet name (.*?)$","matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true},{"type":"alias","name":"lootpet describe <pet>","enabled":true,"actions":[{"type":"script","enabled":true,"script":"lootpet.desc = args[1];\nlootpet.msg(\"You set the description for your lootpet to: \"+lootpet.desc);\nlootpet.save_settings();"}],"text":"^lootpet describe (.*?)$","matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true},{"type":"alias","name":"lootpet look","enabled":true,"actions":[{"type":"script","enabled":true,"script":"var lpet = lootpet.name.charAt(0).toUpperCase()+lootpet.name.slice(1);\n\nprint(lootpet.desc);\nprint(lpet+\" almost glows with nearly god-like power.\");\nprint(\"It has 100% health remaining.\");\nprint(\"It weighs about 0 pounds.\");\nprint(lpet+\" is holding:\");\nprint(\"Nothing.\");\ndisplay_notice(\"It will reset to you.\");"}],"text":"lootpet look","matching":"exact","whole_words":false,"case_sensitive":true,"prefix_suffix":true},{"type":"alias","name":"lootpet showoff <channel>","enabled":true,"actions":[{"type":"script","enabled":true,"script":"if (args[1])\n    var channel = args[1];\nelse\n    var channel = \"say\";\nvar line = channel+\" If only you could see it... \"+lootpet.desc;\nsend_command(line);"}],"text":"^lootpet showoff\\s?(.*?)$","matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true},{"type":"alias","name":"lootpet show_pet on|off","enabled":true,"actions":[{"type":"script","enabled":true,"script":"var suffix = args[1];\nif (suffix === \"on\")\n    lootpet.show_pet = true;\nelse\n    lootpet.show_pet = false;\nlootpet.msg(\"You turn \"+suffix+\" the show_pet illusions.\");\nlootpet.save_settings();"}],"text":"^lootpet show_pet (on|off)$","matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true},{"type":"alias","name":"lootpet my_kill_only on|off","enabled":true,"actions":[{"type":"script","enabled":true,"script":"var suffix = args[1];\nif (suffix === \"on\")\n    lootpet.my_kill_only = true;\nelse\n    lootpet.my_kill_only = false;\nlootpet.msg(\"You turn \"+suffix+\" my_kill_only looting.\");\nlootpet.save_settings();"}],"text":"^lootpet my_kill_only (on|off)$","matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true},{"type":"alias","name":"lootpet inp_gold on|off","enabled":true,"actions":[{"type":"script","enabled":true,"script":"var suffix = args[1];\nif (suffix === \"on\")\n    lootpet.inp_gold = true;\nelse\n    lootpet.inp_gold = false;\nlootpet.msg(\"You turn \"+suffix+\" gold packing.\");\nlootpet.save_settings();"}],"text":"^lootpet inp_gold (on|off)$","matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true},{"type":"alias","name":"lootpet stat_bar on|off","enabled":false,"actions":[{"type":"script","enabled":true,"script":"var suffix = args[1];\nif (suffix === \"on\") {\n    lootpet.stat_bar = true;\n    $(\"#footer #status-tracked\").show();\n    var tracked = lootpet.tracked;\n    if (tracked > 0)\n        tracked = \"+\"+tracked;\n    $(\"#footer #status-tracked\").html(tracked);\n}\nelse {\n    lootpet.stat_bar = false;\n    $(\"#footer #status-tracked\").hide();\n}\nlootpet.msg(\"You turn \"+suffix+\" the stat_bar display.\");\nlootpet.save_settings();"}],"text":"^lootpet stat_bar (on|off)$","matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true},{"type":"alias","name":"lootpet output_msg on|off","enabled":true,"actions":[{"type":"script","enabled":true,"script":"var suffix = args[1];\nif (suffix === \"on\")\n    lootpet.output_msg = true;\nelse\n    lootpet.output_msg = false;\nlootpet.msg(\"You turn \"+suffix+\" the output messages.\");\nlootpet.save_settings();"}],"text":"^lootpet output_msg (on|off)$","matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true},{"type":"alias","name":"lootpet track on|off","enabled":true,"actions":[{"type":"script","enabled":true,"script":"var suffix = args[1];\n//var div = $(\"#footer #status-tracked\");\nif (suffix === \"on\") {\n    lootpet.track = true;\n    //div.css(\"color\", \"#3D670C\");\n}\nelse {\n    lootpet.track = false;\n    //div.css(\"color\", \"#83210C\");\n}\nlootpet.msg(\"You turn \"+suffix+\" the loot tracker.\");\nlootpet.save_settings();"}],"text":"^lootpet track (on|off)$","matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true},{"type":"alias","name":"","enabled":true,"actions":[{"type":"script","enabled":true,"script":"if (typeof lootpet.tracked === \"undefined\") {\n    lootpet.msg(\"Tracker is not activated.\");\n    return;\n}\nlootpet.msg(\"You have collected \"+lootpet.tracked+\" gold.\");"}],"text":"lootpet show","matching":"exact","whole_words":false,"case_sensitive":false,"prefix_suffix":true},{"type":"alias","name":"lootpet set <#>","enabled":true,"actions":[{"type":"script","enabled":true,"script":"if (typeof lootpet.tracked === \"undefined\") {\n    lootpet.msg(\"Tracker is not activated.\");\n    return;\n}\nvar set = Number(args[1]);\nvar tracked_old = Number(lootpet.tracked);\nlootpet.tracked = set;\nlootpet.redraw = true;\nlootpet.msg(\"You set your tracked gold to \"+set+\" sovereigns, from \"+tracked_old+\".\");\nlootpet.save_settings();"}],"text":"^lootpet set (\\d+)$","matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true},{"type":"alias","name":"lootpet add <#>","enabled":true,"actions":[{"type":"script","enabled":true,"script":"if (typeof lootpet.tracked === \"undefined\") {\n    lootpet.msg(\"Tracker is not activated.\");\n    return;\n}\nvar add = Number(args[1]);\nlootpet.tracked = Number(lootpet.tracked);\nlootpet.tracked += add;\nlootpet.redraw = true;\nlootpet.msg(\"You add \"+add+\" to the tracker, for a total of \"+lootpet.tracked+\" gold.\");\nlootpet.save_settings();"}],"text":"^lootpet add (\\d+)$","matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true},{"type":"alias","name":"lootpet sub <#>","enabled":true,"actions":[{"type":"script","enabled":true,"script":"if (typeof lootpet.tracked === \"undefined\") {\n    lootpet.msg(\"Tracker is not activated.\");\n    return;\n}\nvar sub = Number(args[1]);\nlootpet.tracked = Number(lootpet.tracked);\nlootpet.tracked -= sub;\nlootpet.redraw = true;\nlootpet.msg(\"You subtract \"+sub+\" from the tracker, for a total of \"+lootpet.tracked+\" gold.\");\nlootpet.save_settings();"}],"text":"^lootpet sub (\\d+)$","matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true},{"type":"alias","name":"lootpet split <people>","enabled":true,"actions":[{"type":"script","enabled":true,"script":"lootpet.split = args[1].split(\" \");\n\nlootpet.split_off = function () {\n    if (lootpet.splitting)\n        clearTimeout(lootpet.splitting);\n    delete lootpet.splitting;\n    delete lootpet.split;\n    var splitting = reflex_find_by_name(\"group\", \"Splitting\", true, false, \"Lootpet\");\n    reflex_disable(splitting);\n};\n\nvar splitting = reflex_find_by_name(\"group\", \"Splitting\", true, false, \"Lootpet\");\nreflex_enable(splitting);\nclearTimeout(lootpet.splitting);\nlootpet.splitting = setTimeout(function(){lootpet.split_off();}, 3000);\n\nsend_command(\"curing off\" + \"\\r\\n\");\nlast_send = new Date().getTime();"}],"text":"^lootpet split (.*?)$","matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true},{"type":"alias","name":"lootpet reset/clear","enabled":true,"actions":[{"type":"script","enabled":true,"script":"var tracked_old;\nif (typeof lootpet.tracked === \"undefined\")\n    tracked_old = 0;\nelse\n    tracked_old = lootpet.tracked;\nlootpet.tracked = parseInt(0);\nlootpet.redraw = true;\nlootpet.msg(\"You reset your tracked gold to 0, from \"+tracked_old+\" sovereigns.\");\nlootpet.save_settings();"}],"text":"^lootpet (reset|clear)$","matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true}]},{"type":"group","name":"Looting","enabled":false,"actions":[],"items":[{"type":"trigger","name":"pick up thing","enabled":true,"actions":[{"type":"script","enabled":true,"script":"if (lootpet.looting) {\n    delete lootpet.looting;\n    lootpet.pickup();\n    \n    if (!lootpet.show_pet)\n        return;\n    gag_current_line();\n    var thing = args[1];\n    var lpet = lootpet.name;\n    lpet = lpet.charAt(0).toUpperCase()+lpet.slice(1);\n    if (thing.match(/sovereigns/) && lootpet.inp_gold)\n        display_notice(lpet+\" picks up \"+thing+\".\");\n    else\n        display_notice(lpet+\" picks up \"+thing+\", which it promptly hands to you.\");\n}"}],"text":"^You pick up (.*?)\\.$","matching":"regexp","whole_words":false,"case_sensitive":false},{"type":"trigger","name":"put gold away","enabled":true,"actions":[{"type":"script","enabled":true,"script":"delete lootpet.gold_out;\ndelete lootpet.packing;\n\n// turn off\nif (!lootpet.looting) {\n    var looting = reflex_find_by_name(\"group\", \"Looting\", true, false, \"Lootpet\");\n    reflex_disable(looting);\n}\n\n// replace message\nvar amount = args[1];\nvar storage = args[2];\nif (lootpet.show_pet) {\n    gag_current_line();\n    var lpet = lootpet.name;\n    lpet = lpet.charAt(0).toUpperCase()+lpet.slice(1);\n    display_notice(lpet+\" puts your \"+amount+\" gold sovereigns in \"+storage+\".\");\n}"}],"text":"^You put (\\d+) gold sovereigns in (.*?)\\.$","matching":"regexp","whole_words":false,"case_sensitive":false},{"type":"trigger","name":"no eq","enabled":true,"actions":[{"type":"script","enabled":true,"script":"if (lootpet.looting)\n    delete lootpet.looting;\nif (lootpet.packing)\n    delete lootpet.packing;"}],"text":"You must regain equilibrium first.","matching":"exact","whole_words":true,"case_sensitive":true},{"type":"trigger","name":"no bal","enabled":true,"actions":[{"type":"script","enabled":true,"script":"if (lootpet.looting)\n    delete lootpet.looting;\nif (lootpet.packing)\n    delete lootpet.packing;"}],"text":"You must regain balance first.","matching":"exact","whole_words":true,"case_sensitive":true},{"type":"trigger","name":"missing item","enabled":true,"actions":[{"type":"script","enabled":true,"script":"if (lootpet.looting) {\n    if (lootpet.show_pet) {\n        gag_current_line();\n        var lpet = lootpet.name.charAt(0).toUpperCase()+lootpet.name.slice(1);\n        display_notice(lpet+\" cannot seem to find \"+lootpet.looting+\" and quickly gives up.\");\n    }\n    var id = args[1];\n    delete lootpet.grab[id];\n    delete lootpet.looting;\n    lootpet.pickup();\n}"}],"text":"^I see no \\\"(\\d+)\\\" to take\\.$","matching":"regexp","whole_words":false,"case_sensitive":false},{"type":"trigger","name":"cannot take","enabled":true,"actions":[{"type":"script","enabled":true,"script":"if (lootpet.looting) {\n    if (lootpet.show_pet) {\n        gag_current_line();\n        var lpet = lootpet.name.charAt(0).toUpperCase()+lootpet.name.slice(1);\n        display_notice(lpet+\" cannot pick up \"+lootpet.looting+\" and quickly gives up.\");\n    }\n    delete lootpet.grab[lootpet.getting];\n    delete lootpet.looting;\n    lootpet.pickup();\n}"}],"text":"You cannot pick up","matching":"begins","whole_words":false,"case_sensitive":false},{"type":"trigger","name":"stunned","enabled":true,"actions":[{"type":"script","enabled":true,"script":"if (lootpet.looting) {\n    delete lootpet.looting;\n    lootpet.pickup();\n}\nif (lootpet.packing)\n    delete lootpet.packing;"}],"text":"You are no longer stunned.","matching":"exact","whole_words":true,"case_sensitive":true},{"type":"trigger","name":"paralyzed","enabled":true,"actions":[{"type":"script","enabled":true,"script":"if (lootpet.looting) {\n    delete lootpet.looting;\n    lootpet.pickup();\n}\nif (lootpet.packing)\n    delete lootpet.packing;"}],"text":"Paralysed as you are, your body is not able to pick up anything.","matching":"exact","whole_words":true,"case_sensitive":true}]},{"type":"group","name":"Splitting","enabled":false,"actions":[],"items":[{"type":"trigger","name":"curing off","enabled":true,"actions":[{"type":"script","enabled":true,"script":"gag_current_line();\n\nsend_command(\"get \"+lootpet.tracked+\" sovereigns from \"+lootpet.container + \"\\r\\n\");\nlast_send = new Date().getTime();\nsend_command(\"generosity\" + \"\\r\\n\");\nlast_send = new Date().getTime();"}],"text":"Curing disabled.","matching":"exact","whole_words":true,"case_sensitive":true},{"type":"trigger","name":"get gold out","enabled":true,"actions":[{"type":"script","enabled":true,"script":"// replace message\nvar amount = args[1];\nvar storage = args[2];\nif (lootpet.show_pet) {\n    gag_current_line();\n    var lpet = lootpet.name;\n    lpet = lpet.charAt(0).toUpperCase()+lpet.slice(1);\n    display_notice(lpet+\" gets your \"+amount+\" gold sovereigns from \"+storage+\".\");\n}"}],"text":"^You get (\\d+) gold sovereigns from (.*?)\\.$","matching":"regexp","whole_words":false,"case_sensitive":false},{"type":"trigger","name":"gold already out","enabled":true,"actions":[{"type":"script","enabled":true,"script":"gag_current_line();"}],"text":"You cannot batch more than","matching":"begins","whole_words":false,"case_sensitive":true},{"type":"trigger","name":"generosity","enabled":true,"actions":[{"type":"script","enabled":true,"script":"gag_current_line();"}],"text":"A feeling of generosity spreads throughout you.","matching":"exact","whole_words":false,"case_sensitive":true},{"type":"trigger","name":"selfishness off","enabled":true,"actions":[{"type":"script","enabled":true,"script":"gag_current_line();\n\nvar people = lootpet.split;\n\nif (people[people.length-1] == \"\") {\n    var index = people.indexOf(\"\");\n    if (index > -1) people.splice(index, 1);\n}\n\nvar each = Math.floor(lootpet.tracked / (people.length+1));\n\nfor (var i=0; i<people.length; i++) {\n    send_command(\"give \"+each+\" sovereigns to \"+people[i] + \"\\r\\n\");\n}\n\nsend_command(\"put sovereigns in \"+lootpet.container + \"\\r\\n\");\nsend_command(\"curing on\"+ \"\\r\\n\");\nlast_send = new Date().getTime();"}],"text":"^(You have recovered equilibrium|No worries\\. You're not a selfish bastard as is)\\.","matching":"regexp","whole_words":false,"case_sensitive":true},{"type":"trigger","name":"give gold to","enabled":true,"actions":[{"type":"script","enabled":true,"script":"// replace message\nvar amount = args[1];\nvar person = args[2];\nif (lootpet.show_pet) {\n    gag_current_line();\n    var lpet = lootpet.name;\n    lpet = lpet.charAt(0).toUpperCase()+lpet.slice(1);\n    display_notice(lpet+\" gives \"+amount+\" gold sovereigns to \"+person+\".\");\n}"}],"text":"^You give (\\d+) gold sovereigns to (.*?)\\.$","matching":"regexp","whole_words":false,"case_sensitive":false},{"type":"trigger","name":"put gold away","enabled":true,"actions":[{"type":"script","enabled":true,"script":"delete lootpet.gold_out;\ndelete lootpet.packing;\n\n// replace message\nvar amount = args[1];\nvar storage = args[2];\nif (lootpet.show_pet) {\n    gag_current_line();\n    var lpet = lootpet.name;\n    lpet = lpet.charAt(0).toUpperCase()+lpet.slice(1);\n    display_notice(lpet+\" puts your \"+amount+\" gold sovereigns in \"+storage+\".\");\n}"}],"text":"^You put (\\d+) gold sovereigns in (.*?)\\.$","matching":"regexp","whole_words":false,"case_sensitive":false},{"type":"trigger","name":"curing on","enabled":true,"actions":[{"type":"script","enabled":true,"script":"gag_current_line();\nlootpet.split_off();"}],"text":"Curing activated.","matching":"exact","whole_words":false,"case_sensitive":false},{"type":"trigger","name":"no target","enabled":true,"actions":[{"type":"script","enabled":true,"script":"if (lootpet.show_pet) {\n    gag_current_line();\n    var lpet = lootpet.name;\n    lpet = lpet.charAt(0).toUpperCase()+lpet.slice(1);\n    display_notice(lpet+\" looks around but cannot find your hunting partner.\");\n}"}],"text":"^You cannot see that being here\\.$|^You detect nothing here by that name\\.$|^Nothing can be seen here by that name\\.$|^I do not recognise anything called that here\\.$|^Ahh, I am truly sorry, but I do not see anyone by that name here\\.$","matching":"regexp","whole_words":false,"case_sensitive":false}]}],"description":"Auto-loot mob drops"}